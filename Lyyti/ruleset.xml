<?xml version="1.0"?>
<ruleset name="Lyyti">
<description>Lyyti coding standard</description>

 <rule ref="PSR2">
  <exclude name="Generic.WhiteSpace.DisallowTabIndent"/>
  <exclude name="Squiz.ControlStructures.ControlSignature"/>
 </rule>

  <rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>

 <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>

 <rule ref="Squiz.Classes.LowercaseClassKeywords"/>

 <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
 <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
 <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
 <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
 <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>

 <rule ref="Squiz.Commenting.DocCommentAlignment"/>
 <rule ref="Generic.Commenting.Todo"/>

 <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
 <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
 <rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>

 <rule ref="Zend.Files.ClosingTag"/>
 <rule ref="Generic.Files.LineEndings"/>

 <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
 <rule ref="Generic.Formatting.NoSpaceAfterCast"/>

 <rule ref="Squiz.Functions.FunctionDeclaration"/>
 <rule ref="PEAR.Functions.ValidDefaultValue"/>

 <rule ref="Squiz.Operators.ValidLogicalOperators"/>

 <rule ref="Generic.PHP.DeprecatedFunctions"/>
 <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>
 <rule ref="Squiz.PHP.Eval"/>
 <rule ref="Generic.PHP.ForbiddenFunctions"/>
 <rule ref="Squiz.PHP.NonExecutableCode"/>
 <rule ref="Generic.PHP.NoSilencedErrors"/>
 <rule ref="Generic.PHP.LowerCaseConstant"/>

 <rule ref="Squiz.Scope.MemberVarScope"/>
 <rule ref="Squiz.Scope.MethodScope"/>
 <rule ref="Squiz.Scope.StaticThisUsage"/>

 <rule ref="Squiz.WhiteSpace.CastSpacing"/>
 <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
 <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
 <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
 <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>

 <rule ref="Squiz.Classes.ValidClassName" />
 <rule ref="CakePHP.Commenting.FunctionComment" />
 <rule ref="Squiz.NamingConventions.ValidFunctionName" />
 <rule ref="Generic.NamingConventions.CamelCapsFunctionName" />
 <rule ref="PEAR.NamingConventions.ValidFunctionName" />

 <!-- All rules in ./Sniffs are included automatically -->
</ruleset>
